<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
<modelVersion>4.0.0</modelVersion>
<parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.6.2</version>
    <relativePath/> <!-- lookup parent from repository -->
</parent>
<groupId>com.chainmaker</groupId>
<artifactId>mira-job-service</artifactId>
<version>1.1.0-SNAPSHOT</version>
<name>parser</name>
<description>SQL parser</description>
<properties>
    <java.version>11</java.version>
    <validation-api.version>2.0.1.Final</validation-api.version>
    <sonar.host.url>http://docker.oa.com:32100</sonar.host.url>
    <sonar.projectKey>mira-job-service</sonar.projectKey>
    <sonar.projectName>mira-job-service</sonar.projectName>
    <sonar.coverage.jacoco.xmlReportPaths>
    ./target/jacoco-reports/jacoco.xml
    </sonar.coverage.jacoco.xmlReportPaths>
    <sonar.coverage.exclusions>
    **/antlr4/gen/*.java,
    </sonar.coverage.exclusions>
    <sonar.exclusions>
    **/antlr4/gen/*.java,
    </sonar.exclusions>
</properties>
<dependencies>
    <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-web</artifactId>
        <exclusions>
            <exclusion>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-json</artifactId>
            </exclusion>
        </exclusions>
    </dependency>

    <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-logging</artifactId>
    </dependency>
    <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-aop</artifactId>
    </dependency>

    <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>

    <dependency>
        <groupId>io.micrometer</groupId>
        <artifactId>micrometer-registry-prometheus</artifactId>
    </dependency>


    <dependency>
        <groupId>org.apache.calcite</groupId>
        <artifactId>calcite-elasticsearch</artifactId>
        <version>1.36.0</version>
    </dependency>

    <dependency>
        <groupId>org.apache.calcite</groupId>
        <artifactId>calcite-core</artifactId>
        <version>1.36.0</version>
    </dependency>

    <dependency>
        <groupId>org.immutables</groupId>
        <artifactId>value</artifactId>
        <version>2.8.8</version>
    </dependency>

    <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-configuration-processor</artifactId>
        <optional>true</optional>
    </dependency>

<!--    <dependency>-->
<!--        <groupId>org.springframework.boot</groupId>-->
<!--        <artifactId>spring-boot-starter-data-redis</artifactId>-->
<!--    </dependency>-->

    <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-core</artifactId>
        <version>1.2.6</version>
    </dependency>

    <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>1.7.26</version>
    </dependency>

    <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-classic</artifactId>
        <version>1.2.6</version>
    </dependency>


    <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-test</artifactId>
        <scope>test</scope>
    </dependency>

    <dependency>
        <groupId>org.antlr</groupId>
        <artifactId>antlr4-runtime</artifactId>
        <version>4.12.0</version>
    </dependency>

    <dependency>
        <groupId>org.projectlombok</groupId>
        <artifactId>lombok</artifactId>
        <version>1.18.30</version>
        <scope>provided</scope>
    </dependency>

    <dependency>
        <groupId>com.alibaba</groupId>
        <artifactId>fastjson</artifactId>
        <version>1.2.78</version>
    </dependency>

    <dependency>
        <groupId>commons-codec</groupId>
        <artifactId>commons-codec</artifactId>
        <version>1.9</version>
    </dependency>

    <dependency>
        <groupId>net.java.dev.jna</groupId>
        <artifactId>jna</artifactId>
        <version>5.6.0</version>
    </dependency>
    <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-lang3</artifactId>
        <version>3.12.0</version>
    </dependency>
    <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <scope>test</scope>
    </dependency>

    <dependency>
        <groupId>org.junit.platform</groupId>
        <artifactId>junit-platform-commons</artifactId>
    </dependency>

<!--    <dependency>-->
<!--        <groupId>org.slf4j</groupId>-->
<!--        <artifactId>slf4j-api</artifactId>-->
<!--    </dependency>-->

    <dependency>
        <groupId>javax.validation</groupId>
        <artifactId>validation-api</artifactId>
        <version>${validation-api.version}</version>
    </dependency>

    <dependency>
        <groupId>org.apache.calcite</groupId>
        <artifactId>calcite-example-csv</artifactId>
        <version>1.21.0</version>
    </dependency>

    <dependency>
        <groupId>cn.hutool</groupId>
        <artifactId>hutool-all</artifactId>
        <version>5.8.13</version>
    </dependency>

</dependencies>

<build>
    <!-- os系统信息插件, protobuf-maven-plugin需要获取系统信息下载相应的protobuf程序 -->
    <extensions>
        <extension>
            <groupId>kr.motd.maven</groupId>
            <artifactId>os-maven-plugin</artifactId>
            <version>1.6.2</version>
        </extension>
    </extensions>
    <plugins>
        <plugin>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-maven-plugin</artifactId>
            <version>2.6.2</version>
            <configuration>
                <!-- 打包时包含引入的外部jar包 -->
                <includeSystemScope>true</includeSystemScope>
            </configuration>
            <executions>
                <execution>
                    <goals>
                        <goal>repackage</goal>
                    </goals>
                </execution>
            </executions>
        </plugin>


        <plugin>
            <groupId>org.antlr</groupId>
            <artifactId>antlr4-maven-plugin</artifactId>
            <version>4.8-1</version>
            <executions>
                <execution>
                    <goals>
                        <goal>antlr4</goal>
                    </goals>
                    <phase>none</phase>
                </execution>
            </executions>
            <configuration>
                <outputDirectory>src/main/java</outputDirectory>
                <!--<listener>true</listener>-->
                <visitor>true</visitor>
                <!--<treatWarningsAsErrors>true</treatWarningsAsErrors>-->
            </configuration>
    </plugin>
          <!-- Jacoco 插件配置 -->
        <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>0.8.7</version>
            <executions>
                <execution>
                    <id>prepare-agent</id>
                    <goals>
                        <goal>prepare-agent</goal>
                    </goals>
                </execution>
                <execution>
                    <id>report</id>
                    <phase>prepare-package</phase>
                    <goals>
                        <goal>report</goal>
                    </goals>
                </execution>
            </executions>
            <configuration>
                <outputDirectory>${project.build.directory}/jacoco-reports</outputDirectory>
            </configuration>
        </plugin>
        <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>0.8.4</version>
            <configuration>
                <!--指定生成 .exec 文件的存放位置-->
                <destFile>target/jacoco.exec</destFile>
                <!--Jacoco 是根据 .exec 文件生成最终的报告，所以需指定 .exec 的存放路径-->
                <excludes>
                    <!-- 排除某个包下的所有类 -->
                    <exclude>proto/**</exclude>
                    <exclude>com/chainmaker/jobservice/api/model/**</exclude>
                    <exclude>com/chainmaker/jobservice/api/service/grpc/**</exclude>
                    <exclude>com/chainmaker/jobservice/api/common/**</exclude>
                    <exclude>com/chainmaker/jobservice/core/analyzer/**</exclude>
                    <exclude>com/chainmaker/jobservice/core/optimizer/join/**</exclude>
                    <exclude>com/chainmaker/jobservice/api/model/**</exclude>
                    <exclude>com/chainmaker/jobservice/core/antlr4/gen/**</exclude>
                </excludes>
            </configuration>
	    <executions>
                <execution>
                    <id>jacoco-initialize</id>
                    <goals>
                        <goal>prepare-agent</goal>
                    </goals>
                </execution>
                <execution>
                    <id>jacoco-site</id>
                    <phase>test</phase>
		    <goals>
	                <goal>prepare-agent</goal>
                        <goal>report</goal>
                    </goals>
                </execution>
	</executions>
    </plugin>
    <plugin>
	 <groupId>org.sonarsource.scanner.maven</groupId>
         <artifactId>sonar-maven-plugin</artifactId>
         <version>3.9.1.2184</version>
     </plugin>
  </plugins>
</build>

</project>
