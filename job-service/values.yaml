# Default values for job-service.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

env:
  # 执行程序内部环境变量
  SDKCP: /home/workspace/sdk/sdk_config.yml
  # 宿主机环境变量，需提前配置
  SDK_PATH: /data/mpc/sdk     # 此文件应包含chainmakerSDK相关文件，包括: sdk_config.yml \ cert证书文件夹
  RESULT_PATH: /data/mpc/result

metadata:
  labels:
    app: job-service

replicaCount: 1

image:
  repository: "docker.oa.com:5000/mpc/job-service"
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "v4"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext:
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
   runAsUser: 0

service:
  type: NodePort
  port: 5005
  targetPort: 5005
  nodePort: 31010


ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: 
  node-role.kubernetes.io/mpc: mpc

tolerations: []

# 亲和性配置
# 本处使用节点的软反亲和性，实现在同一个拓扑域中相同label的反亲和性
#   如果节点处于 Pod 所在的同一拓扑域且具有键“app”和值“job-service”的标签， 则该 pod 不应将其调度到该节点上。 
#  （如果 topologyKey 为 kubernetes.io/hostname，则意味着当节点和具有键 “app”和值“job-service”的 Pod 处于相同的拓扑域，Pod 不能被调度到该节点上。）
affinity: 
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100  # 权重声明：权重越高，执行优先级越高
        podAffinityTerm:
          labelSelector:
            matchExpressions:
            - key: app
              operator: In
              values:
              - job-service
          topologyKey: kubernetes.io/hostname